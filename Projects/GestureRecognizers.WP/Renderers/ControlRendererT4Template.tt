<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#var controls = new List<string>#>
<#{#>
<#"Image",#>
<#"TableView",#>
<#"ActivityIndicator",#>
<#"DatePicker",#>
<#"Editor",#>
<#"Entry",#>
<#"ProgressBar",#>
<#"SearchBar",#>
<#"Slider",#>
<#"Stepper",#>
<#"Switch",#>
<#"BoxView",#>
<#"Picker",#>
<#"TimePicker",#>
<#"WebView",#>
<#"Label"#>
<#};#>
// <copyright file="IIndiGestureRecognizer.cs" company="David Strickland">
//     Copyright (c) David Strickland. The MIT License (MIT)
// </copyright>

using Xamarin.Forms;
using IndiXam.Forms.Controls;
using IndiXam.Forms.Controls.GestureRecognizers;
using GestureRecognizers.Droid.Renderers;

<#			using (IEnumerator<string> enumerator = controls.GetEnumerator ()) {#>
<#				while(enumerator.MoveNext())#>
<#				{#>
 [assembly: ExportRenderer (typeof(<#=enumerator.Current#>), typeof(Indi<#=enumerator.Current#>Renderer))]
<#				}#>
<#			}#>
namespace IndiXam.Forms.Controls.GestureRecognizers
{
    using System;
    using Xamarin.Forms;
    using System.Linq;
    using System.Collections.Generic;
    using Xamarin.Forms.Platform.WinPhone;

<#			using (IEnumerator<string> enumerator = controls.GetEnumerator ()) {#>
<#				while(enumerator.MoveNext())#>
<#				{#>
	public class Indi<#=enumerator.Current#>Renderer:  <#=enumerator.Current#>Renderer
	{
        IndiGestureListener gestureListener; 
		protected override void OnElementChanged (ElementChangedEventArgs<Xamarin.Forms.<#=enumerator.Current#>> e)
		{
			base.OnElementChanged (e);
			if(GestureActuator.controlsToActuate
			.Contains<GestureActuator.ControlToActuate>(GestureActuator.ControlToActuate.<#=enumerator.Current#>))
			{
				if (e.NewElement == null) {
					gestureListener = null;
				}
				if (e.OldElement == null&& e.NewElement!=null) {

					gestureListener = new IndiGestureListener(this.Control, e.NewElement);
				}
			}
		}
	}
<#				}#>
<#			}#>
}